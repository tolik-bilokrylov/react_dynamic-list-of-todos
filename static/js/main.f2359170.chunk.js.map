{"version":3,"sources":["components/TodoList/TodoList.jsx","api/api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","state","searchLine","filterBy","handleChange","key","value","setState","searchTodo","event","target","filterTodo","name","this","props","todos","selectedUserId","onUserIdSelected","filteredTodos","filter","todo","title","toLowerCase","includes","completed","className","type","placeholder","onChange","map","id","classNames","readOnly","checked","userId","onClick","React","Component","URL","getTodos","a","fetch","response","json","result","data","getUsers","CurrentUser","selectedUser","getUser","prevProps","email","phone","clearUser","App","selectUser","then","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f2359170.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './TodoList.scss';\n\nexport class TodoList extends React.Component {\n  state = {\n    searchLine: '',\n    filterBy: 'all',\n  }\n\n  handleChange = (key, value) => this.setState({ [key]: value });\n\n  searchTodo = event => this.setState({ searchLine: event.target.value });\n\n  filterTodo = (event) => {\n    this.handleChange(event.target.name, event.target.value);\n  }\n\n  render() {\n    const { todos, selectedUserId, onUserIdSelected } = this.props;\n    const { searchLine, filterBy } = this.state;\n    let filteredTodos = todos.filter((todo) => {\n      if (todo.title === null) {\n        return false;\n      }\n\n      return todo.title.toLowerCase().includes(searchLine.toLowerCase());\n    });\n\n    if (filterBy !== 'all') {\n      filteredTodos = filteredTodos.filter(todo => (filterBy === 'active'\n        ? !todo.completed\n        : todo.completed));\n    }\n\n    // export const TodoList = ({\n    //   todos,\n    //   onUserIdSelected,\n    //   selectedUserId,\n    // }) =>\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n        <div className=\"TodoList__list-container\">\n          <input\n            type=\"text\"\n            placeholder=\"Search by title\"\n            value={this.state.searchLine}\n            onChange={this.searchTodo}\n          />\n          <select\n            name=\"filterBy\"\n            value={filterBy}\n            onChange={this.filterTodo}\n          >\n            <option value=\"all\">all</option>\n            <option value=\"active\">active</option>\n            <option value=\"completed\">completed</option>\n          </select>\n          <ul className=\"TodoList__list\">\n            {filteredTodos.map(todo => (\n              <li\n                key={todo.id}\n                className={classNames('TodoList__item', {\n                  'TodoList__item--unchecked': !todo.completed,\n                  'TodoList__item--checked': todo.completed,\n                })}\n              >\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    readOnly\n                    checked={todo.completed}\n                  />\n                  <p>{todo.title}</p>\n                </label>\n                {todo.userId && (\n                  <button\n                    type=\"button\"\n                    className={classNames('button', {\n                      'TodoList__user-button': true,\n                      'TodoList__user-button--selected':\n                        selectedUserId === todo.userId,\n                    })}\n                    onClick={() => {\n                      onUserIdSelected(todo.userId);\n                    }}\n                  >\n                    User&nbsp;\n                    {todo.userId}\n                  </button>\n                )}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    userId: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    createdAt: PropTypes.string.isRequired,\n    updatedAt: PropTypes.string.isRequired,\n  })).isRequired,\n  onUserIdSelected: PropTypes.func.isRequired,\n  selectedUserId: PropTypes.number.isRequired,\n};\n","const URL = 'https://mate-api.herokuapp.com';\n\nexport const getTodos = async() => {\n  const response = await fetch(`${URL}/todos`);\n  const result = await response.json();\n\n  return result.data;\n};\n\nexport const getUsers = async(userId) => {\n  const response = await fetch(`${URL}/users/${userId}`);\n  const result = await response.json();\n\n  return result.data;\n};\n","import React from 'react';\nimport './CurrentUser.scss';\nimport PropTypes from 'prop-types';\nimport { getUsers } from '../../api/api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    selectedUser: {},\n  }\n\n  componentDidMount() {\n    this.getUser();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      this.getUser();\n    }\n  }\n\n  async getUser() {\n    const selectedUser = await getUsers(this.props.userId);\n\n    this.setState({ selectedUser });\n  }\n\n  render() {\n    const { selectedUser } = this.state;\n    const { id, email, phone, name } = selectedUser;\n    const { clearUser } = this.props;\n\n    return (\n      <>\n        <div className=\"CurrentUser\">\n          <h2 className=\"CurrentUser__title\">\n            <span>\n              {'Selected user: '}\n              {id}\n            </span>\n          </h2>\n          {!selectedUser ? (\n            <p>Loading...</p>\n          ) : (\n            <>\n              <h3 className=\"CurrentUser__name\">\n                {name}\n              </h3>\n              <p className=\"CurrentUser__email\">\n                {email}\n              </p>\n              <p className=\"CurrentUser__phone\">\n                {phone}\n              </p>\n            </>\n          )}\n        </div>\n        <button type=\"button\" onClick={clearUser}>Clear</button>\n      </>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clearUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  componentDidMount() {\n    getTodos().then(todos => this.setState({ todos }));\n  }\n\n  selectUser = selectedUserId => this.setState({ selectedUserId });\n\n  clearUser = () => this.setState({ selectedUserId: 0 });\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            selectedUserId={selectedUserId}\n            onUserIdSelected={(userId) => {\n              this.setState({ selectedUserId: userId });\n            }}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clearUser={this.clearUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}